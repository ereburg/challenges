{"version":3,"sources":["main.js"],"names":["document","addEventListener","page","querySelector","header","wrapperChallenges","challenge","querySelectorAll","challengesLink","totalCounter","filterButton","disableScrolling","x","window","scrollX","y","scrollY","onscroll","scrollTo","viewportWidth","textContent","length","pageYOffset","classList","add","remove","behavior","setViewportWidth","innerWidth","documentElement","clientWidth","onWidthChange","forEach","target","ANIMATIONS","contains","JAVASCRIPT","ALL","filterChallengeByClass","className","changeTabClass","inputSearch","getElementById","CheckSearchValidity","COUNTER","P","createElement","insertAdjacentHTML","e","newSearchElement","append","filter","challengeTitle","badges","type","isChallengeTitle","isBadge","filterConditionChallenge","value","trim","toUpperCase","i","innerText","isType","indexOf","filterConditionBadge","filterConditionType","searchButtonMobile","closeButtonMobile","searchWrapper","searchInput","searchWrapperToggler","toggle","setAttribute","removeAttribute","input","item","LINK","MODAL","CLOSE","MODAL_CONTAINER","CANVAS","pageToggler","its_link","its_modal","its_modal_container","its_close","counterBall","continueAnimating","preventDefault","palindromeTemplate","content","reverseStrTemplate","fizzbuzzTemplate","methodContainers","name_challenge","attribute","getAttribute","item_list","item_input","item_button","its_button","its_button_fizzbuzz","item_input_value","alert","challengeName","string","parent","method","clonedElement","cloneNode","output","re","firstMethod","str","lowRegStr","toLowerCase","replace","split","reverse","join","secondMethod","len","result","thirdMethod","substr","charAt","firstChild","insertBefore","taskChecker","inputFizz","inputBuzz","fizz","buzz","cleansing","addElement","clonedListItem","resultWrap","a","fizzbuzz","setInterval","canvas","context","getContext","clockRadius","width","beginPath","fillStyle","arc","Math","PI","fill","font","textAlign","textBaseline","fillText","sin","cos","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","hoursAngle","minutesAngle","secondsAngle","strokeStyle","moveTo","lineTo","lineWidth","stroke","classname","clone_list","cloneMediaButtons","canvasBallButtons","play_button","stop_button","updateBall","ctx","circle","size","dx","dy","drawCircle","clearRect","height","requestAnimationFrame","ball","canvasWizard","image","canvasWizardButtons","up_button","right_button","down_button","left_button","moveUp","moveRight","moveDown","moveLeft","player","w","h","speed","newPos","detectWalls","updateWizard","drawImage","key","wizard"],"mappings":"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","file":"scripts.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n\n\t// Добавляем класс scroll в шапку\n\tconst page = document.querySelector('.page');\n\tconst header = document.querySelector('.header');\n\t// Общее количество challenges в шапке\n\tconst wrapperChallenges = document.querySelector('.challenges__container');\n\tconst challenge = document.querySelectorAll('.challenge');\n\tconst challengesLink = document.querySelectorAll('.challenges__link');\n\tconst totalCounter = document.querySelector('.counter__total');\n\t// Переключение элементов\n\tconst filterButton = document.querySelectorAll('.filter__button');\n\n\n\t// Общее количество challenges в шапке\n\ttotalCounter.textContent = `Challenges total:  ${challenge.length}`;\n\n\n\t// Добавляем класс scroll в шапку\n\twindow.addEventListener('scroll', () => {\n\t\tlet y = window.pageYOffset;\n\n\t\tif (y > 0) {\n\t\t\theader.classList.add('scroll');\n\t\t} else {\n\t\t\theader.classList.remove('scroll');\n\t\t}\n\t});\n\n\t// Плавный скролл\n\twindow.scrollTo({\n\t\tbehavior: \"smooth\"\n\t});\n\n\t// Остановить скролл при открытии модального окна\n\tfunction disableScrolling() {\n\t\tvar x = window.scrollX;\n\t\tvar y = window.scrollY;\n\t\twindow.onscroll = function () { window.scrollTo(x, y); };\n\t}\n\n\tfunction enableScrolling() {\n\t\twindow.onscroll = function () { };\n\t}\n\n\n\n\t// Меняем содержимое сайта при различных величинах ширины экрана\n\tlet viewportWidth;\n\n\t// Set/update the viewportWidth value\n\tconst setViewportWidth = function () {\n\t\tviewportWidth = window.innerWidth || document.documentElement.clientWidth;\n\t};\n\n\t// Log the viewport width into the console\n\tconst onWidthChange = function () {\n\t\tif (viewportWidth > 768) {\n\t\t\ttotalCounter.textContent = `Challenges:  ${challenge.length} units`;\n\t\t} else {\n\t\t\ttotalCounter.textContent = `${challenge.length}`;\n\t\t}\n\t};\n\n\t// Set our initial width and log it\n\tsetViewportWidth();\n\tonWidthChange();\n\n\t// On resize events, recalculate and log\n\twindow.addEventListener('resize', () => {\n\t\tsetViewportWidth();\n\t\tonWidthChange();\n\t}, false);\n\n\n\n\n\t// Переключение элементов, табы (вкладки)\n\tfilterButton.forEach(target => {\n\t\ttarget.addEventListener('click', () => {\n\t\t\tconst ANIMATIONS = target.classList.contains('filter__button--animations');\n\t\t\tconst JAVASCRIPT = target.classList.contains('filter__button--javascript');\n\t\t\tconst ALL = target.classList.contains('filter__button--all');\n\n\t\t\t// Фильртуем среди элементов определенный класс\n\t\t\tconst filterChallengeByClass = className => {\n\t\t\t\tchallenge.forEach(target => {\n\t\t\t\t\ttarget.classList.add('challenge--hidden');\n\n\t\t\t\t\tif (target.classList.contains(className)) {\n\t\t\t\t\t\ttarget.classList.remove('challenge--hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst changeTabClass = () => {\n\t\t\t\tfilterButton.forEach(target => {\n\t\t\t\t\ttarget.classList.remove('active');\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// По нажатию на кнопку \"анимаций\"\n\t\t\tif (ANIMATIONS) {\n\t\t\t\tchangeTabClass();\n\t\t\t\ttarget.classList.add('active');\n\t\t\t\tfilterChallengeByClass('challenge--animations');\n\t\t\t}\n\n\t\t\t// По нажатию на кнопку \"JS\"\n\t\t\telse if (JAVASCRIPT) {\n\t\t\t\tchangeTabClass();\n\t\t\t\ttarget.classList.add('active');\n\t\t\t\tfilterChallengeByClass('challenge--javascript');\n\t\t\t}\n\n\t\t\t// По нажатию на кнопку \"All\"\n\t\t\telse if (ALL) {\n\t\t\t\tchangeTabClass();\n\t\t\t\ttarget.classList.add('active');\n\t\t\t\tchallenge.forEach(target => {\n\t\t\t\t\ttarget.classList.remove('challenge--hidden');\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\n\t// Фильтрация по ключевым словам в поиске\n\tconst inputSearch = document.getElementById('search');\n\n\tfunction CheckSearchValidity() {\n\t\tlet COUNTER = 0;\n\n\t\tlet P = document.createElement('p');\n\t\tP.classList.add('result-search__text');\n\t\tP.insertAdjacentHTML('beforeend', `Hmm, probably you are looking for something special, but it doesn't exists yet... Well, you can ask me <a class=\"result-search__link\" href=\"mailto:eugene.kotsarev@gmail.com\">(@ereburg)</a> about your question!`);\n\n\t\tchallenge.forEach(e => {\n\t\t\tif (e.classList.contains('challenge--hidden')) {\n\t\t\t\tCOUNTER++;\n\t\t\t}\n\t\t});\n\n\t\tconst newSearchElement = document.querySelector('.result-search__text');\n\n\t\tif (COUNTER < challenge.length && wrapperChallenges.contains(newSearchElement)) {\n\t\t\tnewSearchElement.remove();\n\t\t}\n\t\telse if (COUNTER >= challenge.length && !wrapperChallenges.contains(newSearchElement)) {\n\t\t\twrapperChallenges.append(P);\n\t\t}\n\t}\n\n\tinputSearch.addEventListener('keyup', () => {\n\t\tlet filter, challengeTitle, badges, type, isChallengeTitle, isBadge, filterConditionChallenge;\n\t\tfilter = inputSearch.value.trim().toUpperCase();\n\n\t\tfor (let i = 0; i < challenge.length; i++) {\n\t\t\tchallengeTitle = challenge[i].querySelector(\".challenge__title\");\n\t\t\tbadges = challenge[i].querySelector(\".tag__badge\");\n\t\t\ttype = challenge[i].querySelector(\".type\");\n\t\t\tisChallengeTitle = challengeTitle.textContent || challengeTitle.innerText;\n\t\t\tisBadge = badges.textContent || badges.innerText;\n\t\t\tisType = type.textContent || type.innerText;\n\t\t\tfilterConditionChallenge = isChallengeTitle.trim().toUpperCase().indexOf(filter) > -1;\n\t\t\tfilterConditionBadge = isBadge.trim().toUpperCase().indexOf(filter) > -1;\n\t\t\tfilterConditionType = isType.trim().toUpperCase().indexOf(filter) > -1;\n\n\t\t\t// let disappear = () => {\n\t\t\t// \tchallenge[i].style.display = \"none\";\n\t\t\t// };\n\n\t\t\t// let appear = () => {\n\t\t\t// \tchallenge[i].style.display = \"block\";\n\t\t\t// };\n\n\t\t\tif (filterConditionChallenge || filterConditionBadge || filterConditionType) {\n\t\t\t\tchallenge[i].classList.remove('challenge--hidden');\n\t\t\t\tCheckSearchValidity();\n\t\t\t\t// setTimeout(() => appear(), 0);\n\t\t\t} else {\n\t\t\t\tchallenge[i].classList.add('challenge--hidden');\n\t\t\t\tCheckSearchValidity();\n\t\t\t\t// setTimeout(() => disappear(), 0);\n\n\t\t\t}\n\t\t}\n\t});\n\n\t// Поиск для мобильных устройств\n\tconst searchButtonMobile = document.querySelector('.search__button--search');\n\tconst closeButtonMobile = document.querySelector('.search__button--close');\n\tconst searchWrapper = document.querySelector('.search__wrapper');\n\tconst searchInput = document.querySelector('.menu__input');\n\t// Поиск для мобильных устройств\n\tconst searchWrapperToggler = () => {\n\t\tsearchWrapper.classList.toggle('active');\n\t};\n\n\tsearchButtonMobile.addEventListener('click', () => {\n\t\tsearchWrapperToggler();\n\t\tsearchInput.setAttribute('autofocus', true);\n\t});\n\n\tcloseButtonMobile.addEventListener('click', () => {\n\t\tsearchWrapperToggler();\n\t\tsearchInput.removeAttribute('autofocus');\n\t\tsearchInput.value = '';\n\n\t\tif (input.value === '') {\n\t\t\tchallenge.forEach(item => {\n\t\t\t\titem.classList.remove('challenge--hidden');\n\t\t\t});\n\t\t\tif (document.querySelector('.result-search__text')) {\n\t\t\t\tdocument.querySelector('.result-search__text').remove();\n\t\t\t}\n\t\t}\n\t});\n\n\n\t// Event Challenge\n\n\tconst challengesList = document.querySelector('.challenges__container');\n\n\tchallengesList.addEventListener('click', e => {\n\t\tlet target = e.target, LINK, MODAL, CLOSE, MODAL_CONTAINER, CANVAS;\n\n\t\tconst pageToggler = () => {\n\t\t\tpage.classList.toggle('scroll');\n\t\t};\n\n\t\tfor (let i = 0; i < challenge.length; i++) {\n\t\t\tLINK = challenge[i].querySelector('.challenges__link');\n\t\t\tMODAL = challenge[i].querySelector('.challenge__code');\n\t\t\tCANVAS = challenge[i].querySelector('.challenge--canvas');\n\t\t\tMODAL_CONTAINER = challenge[i].querySelector('.code-container--content');\n\t\t\tCLOSE = MODAL.querySelector('.close');\n\n\t\t\tlet its_link = target == LINK || LINK.contains(target),\n\t\t\t\tits_modal = target == MODAL.classList.contains('active') || MODAL.contains(target),\n\t\t\t\tits_modal_container = target == MODAL_CONTAINER || MODAL_CONTAINER.contains(target),\n\t\t\t\tits_close = target == CLOSE || CLOSE.contains(target);\n\n\t\t\tif (its_link) {\n\t\t\t\tMODAL.classList.add('active');\n\t\t\t\tpageToggler();\n\t\t\t\tdisableScrolling();\n\t\t\t}\n\n\t\t\tif (its_close || its_modal && !its_modal_container) {\n\t\t\t\tMODAL.classList.remove('active');\n\t\t\t\tpageToggler();\n\t\t\t\tenableScrolling();\n\t\t\t\tcounterBall = 0;\n\t\t\t\tcontinueAnimating = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tchallengesLink.forEach(item => {\n\t\titem.addEventListener('click', e => {\n\t\t\te.preventDefault();\n\t\t});\n\t});\n\n\n\n\t// Интервью task challenges\n\tconst palindromeTemplate = document.getElementById('template--palindrome').content;\n\tconst reverseStrTemplate = document.getElementById('template--reverse').content;\n\tconst fizzbuzzTemplate = document.getElementById('template--fizzbuzz').content;\n\tconst methodContainers = document.querySelectorAll('.code-method');\n\tconst methodForms = document.querySelectorAll('.code-method__form');\n\n\t// Создаем новый элемент и определяем способ преобразования\n\tfunction taskChecker(challengeName, string, parent, method) {\n\t\tlet clonedElement;\n\n\t\tif (challengeName === 'palindrome') {\n\t\t\tclonedElement = palindromeTemplate.cloneNode(true);\n\t\t} else if (challengeName === 'reverse') {\n\t\t\tclonedElement = reverseStrTemplate.cloneNode(true);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tlet input = clonedElement.querySelector('.input-value');\n\t\tlet output = clonedElement.querySelector('.output-value');\n\t\tinput.textContent = string;\n\t\tconst re = /[^A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԣԱ-Ֆՙա-ևא-תװ-ײء-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺऄ-हऽॐक़-ॡॱ-ॲॻ-ॿঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘ-ౙౠ-ౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡഅ-ഌഎ-ഐഒ-നപ-ഹഽൠ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะา-ำเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາ-ຳຽເ-ໄໆໜ-ໝༀཀ-ཇཉ-ཬྈ-ྋက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-Ⴥა-ჺჼᄀ-ᅙᅟ-ᆢᆨ-ᇹሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙶᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦩᧁ-ᧇᨀ-ᨖᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᰀ-ᰣᱍ-ᱏᱚ-ᱽᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₔℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℼ-ℿⅅ-ⅉⅎↃ-ↄⰀ-Ⱞⰰ-ⱞⱠ-Ɐⱱ-ⱽⲀ-ⳤⴀ-ⴥⴰ-ⵥⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〆〱-〵〻-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆷㇰ-ㇿ㐀-䶵一-鿃ꀀ-ꒌꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙟꙢ-ꙮꙿ-ꚗꜗ-ꜟꜢ-ꞈꞋ-ꞌꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꤊ-ꤥꤰ-ꥆꨀ-ꨨꩀ-ꩂꩄ-ꩋ가-힣豈-鶴侮-頻並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1e\\udf30-\\udf40\\udf42-\\udf49\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf]|\\ud801[\\udc00-\\udc9d]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f\\udd00-\\udd15\\udd20-\\udd39\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude33]|\\ud808[\\udc00-\\udf6e]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud869[\\udc00-\\uded6]|\\ud87e[\\udc00-\\ude1d]/ug;\n\n\n\t\tif (challengeName === 'palindrome') {\n\t\t\tconst firstMethod = (str) => {\n\t\t\t\tlet lowRegStr = str.toLowerCase().replace(re, '');\n\t\t\t\tlet reverseStr = lowRegStr.split('').reverse().join('');\n\t\t\t\treturn reverseStr === lowRegStr;\n\t\t\t};\n\n\t\t\tconst secondMethod = (str) => {\n\t\t\t\tstr = str.toLowerCase().replace(re, '');\n\t\t\t\tlet len = str.length;\n\t\t\t\tfor (let i = 0; i < len / 2; i++) {\n\t\t\t\t\tif (str[i] !== str[len - 1 - i]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\tif (method == 'first method') {\n\t\t\t\toutput.textContent = firstMethod(string);\n\t\t\t} else if (method == 'second method') {\n\t\t\t\toutput.textContent = secondMethod(string);\n\t\t\t}\n\t\t}\n\t\tif (challengeName === 'reverse') {\n\t\t\tconst firstMethod = (str) => {\n\t\t\t\t// console.log('first method');\n\t\t\t\tlet result = str.split('').reverse().join('');\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\tconst secondMethod = (str) => {\n\t\t\t\t// console.log('second method');\n\t\t\t\tlet result = \"\";\n\t\t\t\tfor (let i = str.length - 1; i >= 0; i--) {\n\t\t\t\t\tresult += str[i];\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\tconst thirdMethod = (str) => {\n\t\t\t\t// console.log('third method');\n\t\t\t\treturn (str === '') ? '' : thirdMethod(str.substr(1)) + str.charAt(0);\n\t\t\t};\n\n\t\t\tif (method == 'first method') {\n\t\t\t\toutput.textContent = firstMethod(string);\n\t\t\t} else if (method == 'second method') {\n\t\t\t\toutput.textContent = secondMethod(string);\n\t\t\t} else if (method == 'third method') {\n\t\t\t\toutput.textContent = thirdMethod(string);\n\t\t\t}\n\t\t}\n\n\t\tlet firstChild = parent.firstChild; // Получаем ссылку на первый дочерний элемент\n\t\tparent.insertBefore(clonedElement, firstChild); // Вставляем новый элемент перед первым дочерним элементом\n\t}\n\n\tfunction fizzbuzz(challengeName, fizz, buzz, parent) {\n\n\t\tif (fizz < 1 || buzz < 1) {\n\t\t\treturn alert('Enter a number between 1 and 100');\n\t\t} else {\n\t\t\tconst cleansing = () => {\n\t\t\t\twhile (parent.firstChild) {\n\t\t\t\t\tparent.firstChild.remove();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcleansing();\n\n\t\t\tconst addElement = (item) => {\n\t\t\t\tlet clonedElement = fizzbuzzTemplate.cloneNode(true);\n\t\t\t\tlet clonedListItem = clonedElement.querySelector('.code-method__item');\n\t\t\t\tlet resultWrap = clonedElement.querySelector('.code-method__result-text');\n\t\t\t\tresultWrap.textContent = `${item}`; // присваиваем содержимому параграфа получившееся значение \n\t\t\t\tif (resultWrap.textContent === `Fizz` || resultWrap.textContent === `Buzz`) {\n\t\t\t\t\tclonedListItem.classList.add('code-method__item--result-1');\n\t\t\t\t} else if (resultWrap.textContent === `FizzBuzz`) {\n\t\t\t\t\tclonedListItem.classList.add('code-method__item--result-2');\n\t\t\t\t}\n\t\t\t\tparent.append(clonedElement);\n\t\t\t};\n\n\t\t\tlet a;\n\t\t\tfor (let i = 1; i <= 100; i++) {\n\t\t\t\ta = i;\n\n\t\t\t\tif ((i % fizz == 0) && (i % buzz == 0)) {\n\t\t\t\t\ta = 'FizzBuzz';\n\t\t\t\t} else if (i % fizz == 0) {\n\t\t\t\t\ta = 'Fizz';\n\t\t\t\t} else if (i % buzz == 0) {\n\t\t\t\t\ta = 'Buzz';\n\t\t\t\t}\n\n\t\t\t\taddElement(a);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Отменяем отправку форм\n\tmethodForms.forEach(item => {\n\t\titem.addEventListener('submit', e => {\n\t\t\te.preventDefault();\n\t\t});\n\t});\n\n\t// Для каждого контейнера добавляем свой обработчик\n\tmethodContainers.forEach(item => {\n\t\titem.addEventListener('click', e => {\n\t\t\tlet target = e.target;\n\t\t\tlet attribute = item.getAttribute('data-text');\n\t\t\tlet item_list = item.querySelector('.code-method__list');\n\t\t\tlet item_input = item.querySelector('.code-method__input');\n\t\t\tlet item_button = item.querySelector('.code-method__button');\n\t\t\tlet its_button = target === item_button || item_button.contains(target);\n\t\t\tlet its_button_fizzbuzz = item_button.classList.contains('button--fizzbuzz');\n\t\t\tlet is_palindrome = item.classList.contains('code-method--palindrome');\n\t\t\tlet is_fizzbuzz = item.classList.contains('code-method--fizzbuzz');\n\t\t\tlet name_challenge;\n\n\t\t\tis_palindrome ? name_challenge = 'palindrome' : name_challenge = 'reverse';\n\t\t\tis_fizzbuzz ? name_challenge = 'fizzbuzz' : '';\n\n\t\t\tif (its_button && !its_button_fizzbuzz) {\n\t\t\t\tlet item_input_value = item_input.value;\n\t\t\t\tif (item_input_value == null || item_input_value === '') {\n\t\t\t\t\talert('Please, type something!');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttaskChecker(name_challenge, item_input_value, item_list, attribute);\n\t\t\t\titem_input.value = '';\n\t\t\t} else if (its_button_fizzbuzz) {\n\t\t\t\tlet inputFizz = item.querySelector('.code-method__input--fizz');\n\t\t\t\tlet inputBuzz = item.querySelector('.code-method__input--buzz');\n\t\t\t\tlet inputFizz_value = inputFizz.value;\n\t\t\t\tlet inputBuzz_value = inputBuzz.value;\n\n\t\t\t\tfizzbuzz(name_challenge, inputFizz_value, inputBuzz_value, item_list);\n\t\t\t}\n\t\t});\n\t});\n\n\n\n\n\t// Canvas Clocks\n\n\tfunction setTime() {\n\n\t\tlet canvas = document.getElementById(\"clock\");\n\t\tlet context = canvas.getContext(\"2d\");\n\t\tlet clockRadius = canvas.width / 2;\n\n\t\tcontext.beginPath();\n\n\t\tcontext.fillStyle = \"#E3EDF7\"; // * фоновый цвет\n\t\tcontext.arc(clockRadius, clockRadius, clockRadius, 0, 2 * Math.PI);\n\t\tcontext.fill();\n\n\t\tcontext.fillStyle = \"#31456a\"; // * цвет текста\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(clockRadius, clockRadius, 5, 0, 2 * Math.PI); // * размер текста\n\t\tcontext.fill();\n\n\t\tcontext.font = clockRadius / 10 + \"px ubuntu\";\n\t\tcontext.textAlign = \"center\";\n\t\tcontext.textBaseline = \"middle\";\n\n\t\tfor (let i = 1; i <= 12; i++) {\n\n\t\t\tcontext.fillText(i, clockRadius + clockRadius * 0.875 * Math.sin(i * 2 * Math.PI / 12), clockRadius - (clockRadius * 0.875 * Math.cos(i * 2 * Math.PI / 12)));\n\n\t\t}\n\n\n\t\tlet hours = new Date().getHours();\n\t\tlet minutes = new Date().getMinutes();\n\t\tlet seconds = new Date().getSeconds();\n\n\t\tlet fullHours = hours % 12 + minutes / 60 + seconds / 3600;\n\n\t\tlet hoursAngle = fullHours * 2 * Math.PI / 12;\n\t\tlet minutesAngle = minutes * 2 * Math.PI / 60;\n\t\tlet secondsAngle = seconds * 2 * Math.PI / 60;\n\n\t\tcontext.strokeStyle = \"#31456a\"; // * цвет стрелок\n\t\t// * Часовая стрелка\n\t\tcontext.moveTo(clockRadius, clockRadius);\n\t\tcontext.lineTo(clockRadius + clockRadius * 0.6 * Math.sin(hoursAngle), clockRadius - (clockRadius * 0.6 * Math.cos(hoursAngle)));\n\t\tcontext.lineWidth = 5;\n\t\tcontext.stroke();\n\n\t\t// * Минутная стрелка\n\t\tcontext.moveTo(clockRadius, clockRadius);\n\t\tcontext.lineTo(clockRadius + clockRadius * 0.8 * Math.sin(minutesAngle), clockRadius - (clockRadius * 0.8 * Math.cos(minutesAngle)));\n\t\tcontext.lineWidth = 3;\n\t\tcontext.stroke();\n\n\t\t// * Секундная стрелка\n\t\tcontext.moveTo(clockRadius, clockRadius);\n\t\tcontext.lineTo(clockRadius + clockRadius * 0.9 * Math.sin(secondsAngle), clockRadius - (clockRadius * 0.9 * Math.cos(secondsAngle)));\n\t\tcontext.lineWidth = 2;\n\t\tcontext.stroke();\n\n\t}\n\n\tsetInterval(setTime, 1000);\n\n\n\n\n\t// Social Buttons Challenge\n\tfunction cloneMediaButtons(classname, attribute) {\n\t\tlet donor_list = document.querySelector('.social-buttons__list');\n\t\tlet clone_list = donor_list.cloneNode(true);\n\t\tclone_list.classList.add(classname);\n\t\tclone_list.setAttribute('data-text', attribute);\n\t\tconst parent = document.querySelector('.code__content--social-buttons');\n\t\tparent.append(clone_list);\n\t}\n\tcloneMediaButtons('neumorph', 'Neumorphism design');\n\n\n\n\n\n\t// Canvas Ball Animation\n\tconst canvasBallButtons = document.querySelectorAll('.button--canvas-ball');\n\tlet continueAnimating; // переменная, которая определяет должна ли идти анимация\n\tlet counterBall = 0; // задаем счетчик, который регулирует, чтобы скорость анимации не увеличивалась с каждым кликом \n\n\tfunction ball() {\n\t\tcanvasBallButtons.forEach(item => {\n\t\t\titem.addEventListener('click', () => {\n\t\t\t\tlet play_button = item.classList.contains('button--play');\n\t\t\t\tlet stop_button = item.classList.contains('button--stop');\n\t\n\t\t\t\tif (play_button) {\n\t\t\t\t\tcontinueAnimating = true;\n\t\n\t\t\t\t\tif (counterBall < 1) {\n\t\t\t\t\t\tupdateBall();\n\t\t\t\t\t\tcounterBall++;\n\t\t\t\t\t}\n\t\t\t\t} else if (stop_button) {\n\t\t\t\t\tcontinueAnimating = false;\n\t\n\t\t\t\t\tupdateBall();\n\t\t\t\t\tcounterBall = 0;\n\t\t\t\t}\n\t\n\t\t\t}, false);\n\t\t});\n\n\t\tconst canvas = document.getElementById('ball');\n\t\tconst ctx = canvas.getContext('2d');\n\n\t\tconst circle = {\n\t\t\tx: 200,\n\t\t\ty: 200,\n\t\t\tsize: 20,\n\t\t\tdx: 5,\n\t\t\tdy: 4\n\t\t};\n\n\t\tfunction drawCircle() {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(circle.x, circle.y, circle.size, 0, Math.PI * 2);\n\t\t\tctx.fillStyle = 'teal';\n\t\t\tctx.fill();\n\t\t}\n\n\t\tdrawCircle();\n\n\t\tfunction updateBall() {\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tdrawCircle();\n\n\t\t\t// моеняем координаты\n\t\t\tcircle.x += circle.dx;\n\t\t\tcircle.y += circle.dy;\n\n\t\t\t// Определяем боковые границы\n\t\t\tif (circle.x + circle.size > canvas.width || circle.x - circle.size < 0) {\n\t\t\t\tcircle.dx *= -1;\n\t\t\t}\n\n\t\t\t// Определяем нижнюю и верхнюю границу\n\t\t\tif (circle.y + circle.size > canvas.height || circle.y - circle.size < 0) {\n\t\t\t\tcircle.dy *= -1;\n\t\t\t}\n\n\t\t\tif (continueAnimating) {\n\t\t\t\trequestAnimationFrame(updateBall);\n\t\t\t}\n\t\t}\n\t}\n\n\tball();\n\n\n\t// Canvas Wizard Animation\n\tconst canvasWizard = document.getElementById('wizard');\n\tconst context = canvasWizard.getContext('2d');\n\tconst image = document.querySelector('.wizard-image');\n\tconst canvasWizardButtons = document.querySelectorAll('.button--move');\n\t\n\tfunction wizard() {\n\t\tcanvasWizardButtons.forEach(item => {\n\t\t\titem.addEventListener('mousedown', () => {\n\t\t\t\tlet up_button = item.classList.contains('button--up');\n\t\t\t\tlet right_button = item.classList.contains('button--right');\n\t\t\t\tlet down_button = item.classList.contains('button--down');\n\t\t\t\tlet left_button = item.classList.contains('button--left');\n\t\n\t\t\t\tif (up_button) {\n\t\t\t\t\tmoveUp();\n\t\t\t\t}\n\n\t\t\t\tif (right_button) {\n\t\t\t\t\tmoveRight();\n\t\t\t\t}\n\n\t\t\t\tif (down_button) {\n\t\t\t\t\tmoveDown();\n\t\t\t\t}\n\n\t\t\t\tif (left_button) {\n\t\t\t\t\tmoveLeft();\n\t\t\t\t}\n\t\n\t\t\t}, false);\n\t\t});\n\n\t\tcanvasWizardButtons.forEach(item => {\n\t\t\titem.addEventListener('touchstart', () => {\n\t\t\t\tlet up_button = item.classList.contains('button--up');\n\t\t\t\tlet right_button = item.classList.contains('button--right');\n\t\t\t\tlet down_button = item.classList.contains('button--down');\n\t\t\t\tlet left_button = item.classList.contains('button--left');\n\t\n\t\t\t\tif (up_button) {\n\t\t\t\t\tmoveUp();\n\t\t\t\t}\n\n\t\t\t\tif (right_button) {\n\t\t\t\t\tmoveRight();\n\t\t\t\t}\n\n\t\t\t\tif (down_button) {\n\t\t\t\t\tmoveDown();\n\t\t\t\t}\n\n\t\t\t\tif (left_button) {\n\t\t\t\t\tmoveLeft();\n\t\t\t\t}\n\t\n\t\t\t}, false);\n\t\t});\n\n\t\tcanvasWizardButtons.forEach(item => {\n\t\t\titem.addEventListener('touchend', () => {\n\t\t\t\tlet up_button = item.classList.contains('button--up');\n\t\t\t\tlet right_button = item.classList.contains('button--right');\n\t\t\t\tlet down_button = item.classList.contains('button--down');\n\t\t\t\tlet left_button = item.classList.contains('button--left');\n\t\n\t\t\t\tif (up_button || right_button || down_button || left_button) {\n\t\t\t\t\tplayer.dx = 0;\n\t\t\t\t\tplayer.dy = 0;\n\t\t\t\t}\n\t\t\t}, false);\n\t\t});\n\n\t\tcanvasWizardButtons.forEach(item => {\n\t\t\titem.addEventListener('mouseup', () => {\n\t\t\t\tlet up_button = item.classList.contains('button--up');\n\t\t\t\tlet right_button = item.classList.contains('button--right');\n\t\t\t\tlet down_button = item.classList.contains('button--down');\n\t\t\t\tlet left_button = item.classList.contains('button--left');\n\t\n\t\t\t\tif (up_button || right_button || down_button || left_button) {\n\t\t\t\t\tplayer.dx = 0;\n\t\t\t\t\tplayer.dy = 0;\n\t\t\t\t}\n\t\t\t}, false);\n\t\t});\n\n\t\tconst player = {\n\t\t\tw: 50,\n\t\t\th: 70,\n\t\t\tx: 20,\n\t\t\ty: 200,\n\t\t\tspeed: 10,\n\t\t\tdx: 0,\n\t\t\tdy: 0\n\t\t};\n\n\t\tfunction drawPlayer() {\n\t\t\tcontext.drawImage(image, player.x, player.y, player.w, player.h);\n\t\t}\n\n\t\tfunction clear() {\n\t\t\tcontext.clearRect(0, 0, canvasWizard.width, canvasWizard.height);\n\t\t}\n\n\t\tfunction newPos() {\n\t\t\tplayer.x += player.dx;\n\t\t\tplayer.y += player.dy;\n\n\t\t\tdetectWalls();\n\t\t}\n\n\t\tfunction detectWalls() {\n\t\t\t// Left wall\n\t\t\tif (player.x < 0) {\n\t\t\t\tplayer.x = 0;\n\t\t\t}\n\n\t\t\t// Right Wall\n\t\t\tif (player.x + player.w > canvasWizard.width) {\n\t\t\t\tplayer.x = canvasWizard.width - player.w;\n\t\t\t}\n\n\t\t\t// Top wall\n\t\t\tif (player.y < 0) {\n\t\t\t\tplayer.y = 0;\n\t\t\t}\n\n\t\t\t// Bottom Wall\n\t\t\tif (player.y + player.h > canvasWizard.height) {\n\t\t\t\tplayer.y = canvasWizard.height - player.h;\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWizard() {\n\t\t\tclear();\n\n\t\t\tdrawPlayer();\n\n\t\t\tnewPos();\n\n\t\t\trequestAnimationFrame(updateWizard);\n\t\t}\n\n\t\tfunction moveUp() {\n\t\t\tplayer.dy = -player.speed;\n\t\t}\n\n\t\tfunction moveDown() {\n\t\t\tplayer.dy = player.speed;\n\t\t}\n\n\t\tfunction moveRight() {\n\t\t\tplayer.dx = player.speed;\n\t\t}\n\n\t\tfunction moveLeft() {\n\t\t\tplayer.dx = -player.speed;\n\t\t}\n\n\t\tfunction keyDown(e) {\n\t\t\tif (e.key === 'ArrowRight' || e.key === 'Right') {\n\t\t\t\tmoveRight();\n\t\t\t} else if (e.key === 'ArrowLeft' || e.key === 'Left') {\n\t\t\t\tmoveLeft();\n\t\t\t} else if (e.key === 'ArrowUp' || e.key === 'Up') {\n\t\t\t\tmoveUp();\n\t\t\t} else if (e.key === 'ArrowDown' || e.key === 'Down') {\n\t\t\t\tmoveDown();\n\t\t\t}\n\t\t}\n\n\t\tfunction keyUp(e) {\n\t\t\tif (\n\t\t\t\te.key == 'Right' ||\n\t\t\t\te.key == 'ArrowRight' ||\n\t\t\t\te.key == 'Left' ||\n\t\t\t\te.key == 'ArrowLeft' ||\n\t\t\t\te.key == 'Up' ||\n\t\t\t\te.key == 'ArrowUp' ||\n\t\t\t\te.key == 'Down' ||\n\t\t\t\te.key == 'ArrowDown'\n\t\t\t) {\n\t\t\t\tplayer.dx = 0;\n\t\t\t\tplayer.dy = 0;\n\t\t\t}\n\t\t}\n\n\t\tupdateWizard();\n\n\t\tdocument.addEventListener('keydown', keyDown);\n\t\tdocument.addEventListener('keyup', keyUp);\n\t}\n\n\twizard();\n\n\n\n\n\n\n\n\t// // Создание анимаций для фильтрации элементов\n\t// // получаем координаты элемента в контексте документа\n\t// function getCoords(elem) {\n\t// \tlet box = elem.getBoundingClientRect();\n\n\t// \treturn {\n\t// \t\ttop: box.top + pageYOffset,\n\t// \t\tleft: box.left + pageXOffset\n\t// \t};\n\t// }\n\n\t// // Текущие координаты элементов\n\t// filterButton.forEach(item => {\n\t// \tgetCoords(item);\n\t// });\n\n\t// challenge.forEach(item => {\n\t// \tgetCoords(item);\n\t// });\n});"]}